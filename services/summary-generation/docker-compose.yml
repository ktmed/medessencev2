version: '3.8'

services:
  summary-generation:
    build: .
    container_name: summary-generation-service
    ports:
      - "8003:8003"
    environment:
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8003
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql+asyncpg://postgres:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-radiology_ai}
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-4-1106-preview
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - radiology-ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: summary-generation-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-radiology_ai}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"  # Different port to avoid conflicts
    restart: unless-stopped
    networks:
      - radiology-ai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: summary-generation-redis
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - radiology-ai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: summary-generation-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - summary-generation
    restart: unless-stopped
    networks:
      - radiology-ai-network

volumes:
  postgres_data:
  redis_data:

networks:
  radiology-ai-network:
    driver: bridge