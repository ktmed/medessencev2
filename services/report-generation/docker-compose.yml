version: '3.8'

services:
  # PostgreSQL Database for Reports
  report-db:
    image: postgres:15-alpine
    container_name: radiology-report-db
    environment:
      POSTGRES_DB: radiology_reports
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secure_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - report_db_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d radiology_reports"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - radiology-network

  # Redis for Caching and Session Management
  redis:
    image: redis:7-alpine
    container_name: radiology-report-redis
    command: redis-server --appendonly yes --requirepass redis_password_2024
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - radiology-network

  # Medical Report Generation Service
  report-service:
    build: .
    container_name: radiology-report-service
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://postgres:secure_password_2024@report-db:5432/radiology_reports
      DATABASE_POOL_SIZE: 10
      DATABASE_MAX_OVERFLOW: 20
      
      # Redis Configuration
      REDIS_URL: redis://:redis_password_2024@redis:6379/0
      REDIS_CACHE_TTL: 3600
      
      # OpenAI Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: gpt-4-1106-preview
      OPENAI_MAX_TOKENS: 4000
      OPENAI_TEMPERATURE: 0.3
      
      # Security Configuration
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-key-change-in-production}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      
      # Application Configuration
      DEBUG: "false"
      LOG_LEVEL: INFO
      ALLOWED_HOSTS: '["*"]'
      
      # Medical Configuration
      DEFAULT_LANGUAGE: de
      REQUIRE_PHYSICIAN_SIGNATURE: "true"
      ENABLE_AUDIT_LOGGING: "true"
      DATA_RETENTION_DAYS: 2555
      
      # File Configuration
      MAX_UPLOAD_SIZE: 10485760  # 10MB
      
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./temp:/app/temp
    ports:
      - "8002:8002"
    depends_on:
      report-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - radiology-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: radiology-report-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - report-service
    restart: unless-stopped
    networks:
      - radiology-network

  # PostgreSQL Admin Interface (Development)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: radiology-report-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@radiology.local
      PGADMIN_DEFAULT_PASSWORD: admin_password_2024
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    depends_on:
      - report-db
    profiles:
      - development
    networks:
      - radiology-network

  # Redis Commander (Development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: radiology-report-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis_password_2024
      HTTP_USER: admin
      HTTP_PASSWORD: admin_password_2024
    ports:
      - "8081:8081"
    depends_on:
      - redis
    profiles:
      - development
    networks:
      - radiology-network

volumes:
  report_db_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  radiology-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16