version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: radiology_db
      POSTGRES_USER: meduser
      POSTGRES_PASSWORD: medpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U meduser -d radiology_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend Development
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_WS_URL=ws://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Backend API Gateway
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:3000"
    environment:
      - DATABASE_URL=postgresql://meduser:medpass@postgres:5432/radiology_db
      - REDIS_URL=redis://redis:6379
      - TRANSCRIPTION_SERVICE_URL=http://transcription-service:8081
      - REPORT_SERVICE_URL=http://report-generation:8082
      - SUMMARY_SERVICE_URL=http://summary-generation:8083
      - JWT_SECRET=medical-radiology-jwt-secret-2024-secure-key-development-only
      - JWT_REFRESH_SECRET=medical-radiology-jwt-refresh-secret-2024-secure-key-development-only
      - SESSION_SECRET=medical-radiology-session-secret-2024-secure-key-development-only
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Transcription Service
  transcription-service:
    build:
      context: ./services/transcription
      dockerfile: Dockerfile.simple
    ports:
      - "8081:8001"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379
      - USE_LOCAL_WHISPER=false
      - DEBUG=true
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - default

  # Report Generation Service
  report-generation:
    build:
      context: ./services/report-generation
      dockerfile: Dockerfile
    ports:
      - "8082:8002"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-fake-key-for-dev}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - AI_PROVIDER_PRIORITY=${AI_PROVIDER_PRIORITY:-openai,claude,gemini}
      - DATABASE_URL=postgresql://meduser:medpass@postgres:5432/radiology_db
      - SECRET_KEY=dev-secret-key-change-in-production
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - default

  # Summary Generation Service
  summary-generation:
    build:
      context: ./services/summary-generation
      dockerfile: Dockerfile
    ports:
      - "8083:8003"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - AI_PROVIDER_PRIORITY=${AI_PROVIDER_PRIORITY:-openai,claude,gemini}
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://meduser:medpass@postgres:5432/radiology_db
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  postgres_data:
  redis_data: