# =============================================================================
# Stage 1: Dependencies
# =============================================================================
FROM node:18-alpine AS deps
WORKDIR /app

# Copy package files from the core services directory
COPY package*.json ./

# Install dependencies with production optimizations
RUN npm ci --only=production --prefer-offline --no-audit --progress=false \
    && npm cache clean --force

# =============================================================================
# Stage 2: Production Runner
# =============================================================================
FROM node:18-alpine AS production

# Set production environment
ENV NODE_ENV=production

# Create application user for security
RUN addgroup --system --gid 1001 medessenceai \
    && adduser --system --uid 1001 medessenceai

WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps --chown=medessenceai:medessenceai /app/node_modules ./node_modules

# Copy all the core services code
COPY --chown=medessenceai:medessenceai . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data \
    && chown -R medessenceai:medessenceai /app

# Switch to non-root user
USER medessenceai

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD node -e "require('http').get('http://localhost:8080/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"

# Set the entry point to the websocket proxy
CMD ["node", "websocket/websocket-proxy.js"]